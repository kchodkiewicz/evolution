{
    "0" : "DecisionTreeClassifier(max_depth=1)",
    "1" : "DecisionTreeClassifier(criterion='entropy')",
    "2" : "DecisionTreeClassifier(splitter='random')",
    "3" : "DecisionTreeClassifier(splitter='random', criterion='entropy')",
    "4" : "DecisionTreeClassifier(max_features='sqrt')",
    "5" : "DecisionTreeClassifier(max_features='log2')",
    "6" : "DecisionTreeClassifier(criterion='entropy', max_features='log2')",
    "7" : "DecisionTreeClassifier(splitter='random', max_features='log2', )",
    "8" : "DecisionTreeClassifier(criterion='entropy', max_features='sqrt')",
    "9" : "DecisionTreeClassifier(splitter='random', max_features='sqrt')",
    "10" : "GaussianNB()",
    "11" : "GaussianNB(var_smoothing=1)",
    "12" : "GaussianNB(var_smoothing=0)",
    "13" : "GaussianNB(var_smoothing=1e9)",
    "14" : "SVC()",
    "15" : "SVC(gamma='auto')",
    "16" : "SVC(C=1e-2)",
    "17" : "SVC(C=1e2)",
    "18" : "SVC(kernel='poly')",
    "19" : "SVC(kernel='poly', gamma='auto')",
    "20" : "SVC(kernel='sigmoid')",
    "21" : "SVC(kernel='sigmoid', gamma='auto')",
    "22" : "SVC(kernel='linear')",
    "23" : "SVC(kernel='linear')",
    "24" : "SGDClassifier()",
    "25" : "SGDClassifier(loss='log')",
    "26" : "SGDClassifier(loss='modified_huber')",
    "27" : "SGDClassifier(loss='squared_hinge')",
    "28" : "SGDClassifier(loss='perceptron')",
    "29" : "SGDClassifier(penalty='elasticnet')",
    "30" : "SGDClassifier(loss='log', penalty='elasticnet')",
    "31" : "SGDClassifier(loss='modified_huber', penalty='elasticnet')",
    "32" : "SGDClassifier(loss='squared_hinge', penalty='elasticnet')",
    "33" : "SGDClassifier(loss='perceptron', penalty='elasticnet')",
    "34" : "KNeighborsClassifier()",
    "35" : "KNeighborsClassifier(n_neighbors=2)",
    "36" : "KNeighborsClassifier(n_neighbors=10)",
    "37" : "KNeighborsClassifier(weights='distance')",
    "38" : "KNeighborsClassifier(algorithm='ball_tree')",
    "39" : "KNeighborsClassifier(algorithm='kd_tree')",
    "40" : "KNeighborsClassifier(algorithm='brute')",
    "41" : "KNeighborsClassifier(algorithm='ball_tree', weights='distance')",
    "42" : "KNeighborsClassifier(algorithm='kd_tree', weights='distance')",
    "43" : "KNeighborsClassifier(algorithm='brute', weights='distance')",
    "44" : "GaussianProcessClassifier()",
    "45" : "GaussianProcessClassifier(warm_start=True)",
    "46" : "GaussianProcessClassifier(n_restarts_optimizer=1)",
    "47" : "GaussianProcessClassifier(n_restarts_optimizer=1, warm_start=True)",
    "48" : "GaussianProcessClassifier(max_iter_predict=10)",
    "49" : "GaussianProcessClassifier(warm_start=True, max_iter_predict=10)",
    "50" : "GaussianProcessClassifier(n_restarts_optimizer=1, max_iter_predict=10)",
    "51" : "GaussianProcessClassifier(n_restarts_optimizer=1, warm_start=True, max_iter_predict=10)",
    "52" : "GaussianProcessClassifier(max_iter_predict=10)",
    "53" : "GaussianProcessClassifier(n_restarts_optimizer=5)",
    "54" : "LogisticRegression()",
    "55" : "LogisticRegression(penalty='none')",
    "56" : "LogisticRegression(solver='liblinear', penalty='l1')",
    "57" : "LogisticRegression(solver='newton-cg')",
    "58" : "LogisticRegression(solver='saga', penalty='l1')",
    "59" : "LogisticRegression(solver='saga', penalty='none')",
    "60" : "LogisticRegression(solver='saga')",
    "61" : "LogisticRegression(solver='liblinear', penalty='l2')",
    "62" : "PassiveAggressiveClassifier()",
    "63" : "PassiveAggressiveClassifier(C=10)",
    "64" : "PassiveAggressiveClassifier(C=10, loss='hinge')",
    "65" : "PassiveAggressiveClassifier(loss='squared_hinge')",
    "66" : "PassiveAggressiveClassifier(early_stopping=True)",
    "67" : "PassiveAggressiveClassifier(C=10, early_stopping=True)",
    "68" : "PassiveAggressiveClassifier(C=10, loss='hinge', early_stopping=True)",
    "69" : "PassiveAggressiveClassifier(loss='squared_hinge', early_stopping=True)",
    "70" : "PassiveAggressiveClassifier(n_iter_no_change=1)",
    "71" : "QuadraticDiscriminantAnalysis()",
    "72" : "QuadraticDiscriminantAnalysis(store_covariance=True)",
    "73" : "QuadraticDiscriminantAnalysis(tol=1.0e-1)",
    "74" : "QuadraticDiscriminantAnalysis(tol=1.0e-1, store_covariance=True)",
    "75" : "LinearDiscriminantAnalysis()",
    "76" : "LinearDiscriminantAnalysis(store_covariance=True)",
    "77" : "LinearDiscriminantAnalysis(n_components=1)",
    "78" : "LinearDiscriminantAnalysis(solver='lsqr')",
    "79" : "LinearDiscriminantAnalysis(solver='lsqr', shrinkage='auto')",
    "80" : "LinearDiscriminantAnalysis(solver='lsqr', shrinkage=1.0)",
    "81" : "LinearDiscriminantAnalysis(solver='eigen')",
    "82" : "LinearDiscriminantAnalysis(solver='eigen', shrinkage='auto')",
    "83" : "LinearDiscriminantAnalysis(solver='eigen', shrinkage=1.0)"
}
